.card.event-card[event]
  .d-flex.flex-row
    .image
      = image_pack_tag event.image_path, class: 'event-card-image'
    .event-card-body.card-body
      .event-card-header.d-flex.justify-content-between
        %h2
          = link_to event.name, event, class: 'black'

      %p
        %em
          =event.decorate.display_time

      %p.overflow-hidden.event-description
        =event.description

      %a{href: event_path(event)}
        %i{:class => event.decorate.like_icon(current_user.liked(event))}
          .d-inline.d-md-none
            = event.decorate.likes(current_user, current_user_liked: current_user.liked(event), compressed: true)
          .d-none.d-md-inline
            = event.decorate.likes(current_user, current_user_liked: current_user.liked(event), compressed: false)

  - if defined?(render_params) && render_params[:add_event_to_outing]

    .card-footer
      - if @proposed_event.nil? # Needed this for search functionality
        - @proposed_event = ProposedEvent.new

      = simple_form_for @proposed_event, html: {class: 'w-100 d-flex justify-content-between'}, remote: true do |f|
        = f.hidden_field :event_id, value: event.id
        = f.hidden_field :outing_id, value: outing.id
        = f.hidden_field :proposed_datetime, value: event.time_of_event
        = f.hidden_field :status, value: 'pending'

          %button.btn.btn-outline-primary.reject-event-button{type: "button"}
            %i.bi-x-circle.ms-1
            %span.action-button-text.d-none.d-sm-inline
              Dismiss

          %button.btn.btn-outline-primary.send-proposed-event-button{type: "submit"}
            %span.action-button-text.d-none.d-sm-inline
              Add to Outing
            %i.bi-calendar-plus.ms-1