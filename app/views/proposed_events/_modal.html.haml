
.proposed_event_modal.modal.fade{:id => "modal_proposed_event_#{proposed_event.id}", "aria-hidden" => "true", "aria-labelledby" => "exampleModalLabel", :role => "dialog", :tabindex => "-1"}
  .modal-dialog{:role => "document"}
    .modal-content
      .modal-header
        %h2#exampleModalLabel.modal-title
          ="#{proposed_event.event.name} Proposed event details"

        %button.btn.close{"aria-label" => "Close", "data-bs-dismiss" => "modal", :type => "button"}
          %span{"aria-hidden" => "true"} Ã—
      .modal-body

        = simple_form_for proposed_event, html: { class: 'proposed-event-set-datetime' }, remote: true do |f|
          -# disable form if the user is not the creator of the outing or the event has a time
          - disabled = (proposed_event.outing.creator_id != current_user.id && !current_user.admin?) || proposed_event.event.time_of_event.present?

          = f.input :proposed_datetime, disabled: disabled, as: :datetime, input_html: { class: 'form-control' }, wrapper: false, label: false, required: false, html5: true

          = f.button :submit, 'Update', disabled: disabled, class: 'btn btn-primary'

        - if proposed_event.event.time_of_event.present?
          %p.text-center
            %i
              This event has a set date and time.
        .proposed-event-votes
          %h2 Event Votes
          .proposed_event_vote_count.mb-2
            %button.btn{disabled: :disabled}
              = proposed_event.decorate.vote_likes
              %i.bi-hand-thumbs-up

          - proposed_event.votes_for.voters.each do |voter|
            = render 'users/user_card', user: voter

      .modal-footer
        %button.btn.btn-secondary{"data-bs-dismiss" => "modal", :type => "button"} Close

